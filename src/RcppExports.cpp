// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ExtractGenomeNameFromPath
std::string ExtractGenomeNameFromPath(std::string path);
RcppExport SEXP _MLSTyper_ExtractGenomeNameFromPath(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(ExtractGenomeNameFromPath(path));
    return rcpp_result_gen;
END_RCPP
}
// GetGenomeNameWithExt
std::string GetGenomeNameWithExt(std::string path, std::string ext);
RcppExport SEXP _MLSTyper_GetGenomeNameWithExt(SEXP pathSEXP, SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< std::string >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(GetGenomeNameWithExt(path, ext));
    return rcpp_result_gen;
END_RCPP
}
// RunBlast
DataFrame RunBlast(const std::vector<std::string>& fastaPaths, const std::string& blastDB);
RcppExport SEXP _MLSTyper_RunBlast(SEXP fastaPathsSEXP, SEXP blastDBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type fastaPaths(fastaPathsSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type blastDB(blastDBSEXP);
    rcpp_result_gen = Rcpp::wrap(RunBlast(fastaPaths, blastDB));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MLSTyper_ExtractGenomeNameFromPath", (DL_FUNC) &_MLSTyper_ExtractGenomeNameFromPath, 1},
    {"_MLSTyper_GetGenomeNameWithExt", (DL_FUNC) &_MLSTyper_GetGenomeNameWithExt, 2},
    {"_MLSTyper_RunBlast", (DL_FUNC) &_MLSTyper_RunBlast, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_MLSTyper(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
